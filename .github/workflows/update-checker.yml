name: Update Checker

env:
  TZ: Asia/Shanghai

on:
  workflow_dispatch:
  schedule:
    - cron: 0 */24 * * *

jobs:
  check:
    runs-on: ubuntu-latest

    steps:

    - name: Get Tags
      id: getTags
      run: |
        sudo apt-get install -y jq
        latestTag="$((curl -gs -H 'Content-Type: application/json' \
          -H "Authorization: Bearer ${{ secrets.ACCESS_TOKEN }}" \
          -X POST -d '{ "query": "query {repository(owner: \"x-wrt\", name: \"x-wrt\") {refs(refPrefix: \"refs/tags/\", last: 4, orderBy: {field: TAG_COMMIT_DATE, direction: ASC}) {edges {node {name}}}}}"}' https://api.github.com/graphql) | jq -r '.data.repository.refs.edges[].node.name' | grep '22.' | tail -n 1)"
        echo "::set-output name=latestTag::${latestTag}"
        echo "latestTag: $latestTag"
        myTag=$(curl https://api.github.com/repos/zhuxiaole/Build-OpenWrt/releases/latest | jq '.tag_name' | sed 's/\"//g')
        myTag=$(echo $myTag | cut -d "|" -f3)
        echo "::set-output name=myTag::${myTag}"
        echo "myTag: $myTag"

    - name: Compare Tag Time
      id: compareTags
      run: |
        if [ ${{steps.getTags.outputs.latestTag}} == ${{steps.getTags.outputs.myTag}} ]
        then
          echo "::set-output name=update::false"
        else
          echo "::set-output name=update::true"
        fi

    - name: Trigger build
      if: steps.compareTags.outputs.update == 'true'
      run: |
        sudo timedatectl set-timezone "$TZ"
          curl \
          -X POST https://api.github.com/repos/${{ github.repository }}/dispatches \
          -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Authorization: token ${{ secrets.ACCESS_TOKEN }}" \
          -d '{"event_type": "X-Wrt x86_64 ${{steps.getTags.outputs.latestTag}}", "client_payload": {"target": "x86_64", "branch": "${{steps.getTags.outputs.latestTag}}"}}'
          sleep 10
          curl \
          -X POST https://api.github.com/repos/${{ github.repository }}/dispatches \
          -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Authorization: token ${{ secrets.ACCESS_TOKEN }}" \
          -d '{"event_type": "X-Wrt mi-ac2100 ${{steps.getTags.outputs.latestTag}}", "client_payload": {"target": "mi-ac2100", "branch": "${{steps.getTags.outputs.latestTag}}"}}'
        
    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        token: ${{ secrets.ACCESS_TOKEN }}
        repository: ${{ github.repository }}
        retain_days: 1
        keep_minimum_runs: 4