#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: Build X-Wrt

on:
  repository_dispatch:

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    name: ${{matrix.repo_type}} ${{matrix.target}} ${{matrix.branch}}
    strategy:
      fail-fast: false
      matrix:
        branch: ["${{ github.event.client_payload.branch }}"]
        target: ["${{ github.event.client_payload.target }}"]
        repo_type: ["X-Wrt"]

    steps:
    - name: Checkout
      uses: actions/checkout@main
      
    - name: Load Settings.ini
      run: |
        source "xwrt/devices/common/settings.ini"
        if [ -f "xwrt/devices/${{matrix.target}}/settings.ini" ]; then
          source "xwrt/devices/${{matrix.target}}/settings.ini"
        fi
        echo "REPO_BRANCH=${{matrix.branch}}" >> $GITHUB_ENV
        echo "RELEASE_TAG=${{matrix.repo_type}}|${{matrix.target}}|${{matrix.branch}}" >> $GITHUB_ENV
        echo "REPO_URL=${REPO_URL}" >> $GITHUB_ENV
        echo "FEEDS_CONF=${FEEDS_CONF}" >> $GITHUB_ENV
        echo "CONFIG_FILE=${CONFIG_FILE}" >> $GITHUB_ENV
        echo "DIY_P1_SH=${DIY_P1_SH}" >> $GITHUB_ENV
        echo "DIY_P2_SH=${DIY_P2_SH}" >> $GITHUB_ENV
        echo "UPLOAD_BIN_DIR=${UPLOAD_BIN_DIR}" >> $GITHUB_ENV
        echo "UPLOAD_FIRMWARE=${UPLOAD_FIRMWARE}" >> $GITHUB_ENV
        echo "UPLOAD_COWTRANSFER=${UPLOAD_COWTRANSFER}" >> $GITHUB_ENV
        echo "UPLOAD_WETRANSFER=${UPLOAD_WETRANSFER}" >> $GITHUB_ENV
        echo "UPLOAD_RELEASE=${UPLOAD_RELEASE}" >> $GITHUB_ENV
        
    - name: Trigger Packages Update
      run: |
        gitdate=$(curl -s "https://api.github.com/repos/zhuxiaole/my-packages-for-x-wrt/actions/runs" | jq -r '.workflow_runs[0].created_at')
        gitdate=$(date -d "$gitdate" +%s)
        now=$(date -d "$(date)" +%s)
        if [[ $(expr $gitdate + 300) < $now ]]; then
          curl -X POST https://api.github.com/repos/zhuxiaole/my-packages-for-x-wrt/dispatches \
            -H "Accept: application/vnd.github.everest-preview+json" \
            -H "Authorization: token ${{ secrets.ACTIONS_TRIGGER_PAT }}" \
          --data '{"event_type": "update"}'
        fi

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
        sudo -E apt-get -qq install jq
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Load custom feeds
      run: |
        if [ -e xwrt/devices/${{matrix.target}}/$FEEDS_CONF ]
        then
          mv -f xwrt/devices/${{matrix.target}}/$FEEDS_CONF openwrt/feeds.conf.default
        else
          if [ -e xwrt/devices/common/$FEEDS_CONF ]
          then
            mv -f xwrt/devices/common/$FEEDS_CONF openwrt/feeds.conf.default
          fi
        fi

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a
      
    - name: Modify feeds
      run: |
        cd openwrt
        chmod +x $GITHUB_WORKSPACE/xwrt/devices/common/$DIY_P1_SH
        $GITHUB_WORKSPACE/xwrt/devices/common/$DIY_P1_SH
        if [ -e $GITHUB_WORKSPACE/xwrt/devices/${{matrix.target}}/$DIY_P1_SH ]
        then
          chmod +x $GITHUB_WORKSPACE/xwrt/devices/${{matrix.target}}/$DIY_P1_SH
          $GITHUB_WORKSPACE/xwrt/devices/${{matrix.target}}/$DIY_P1_SH
        fi

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        if [ -e xwrt/devices/${{matrix.target}}/$CONFIG_FILE ]
        then
          mv -f xwrt/devices/${{matrix.target}}/$CONFIG_FILE openwrt/.config
        fi
        sed -i '/CONFIG_VERSION_NUMBER/d' openwrt/.config
        sed -i '/CONFIG_VERSION_DIST/a\CONFIG_VERSION_NUMBER="${{matrix.branch}}"' openwrt/.config
        cd openwrt
        chmod +x $GITHUB_WORKSPACE/xwrt/devices/common/$DIY_P2_SH
        $GITHUB_WORKSPACE/xwrt/devices/common/$DIY_P2_SH
        if [ -e $GITHUB_WORKSPACE/xwrt/devices/${{matrix.target}}/$DIY_P2_SH ]
        then
          chmod +x $GITHUB_WORKSPACE/xwrt/devices/${{matrix.target}}/$DIY_P2_SH
          $GITHUB_WORKSPACE/xwrt/devices/${{matrix.target}}/$DIY_P2_SH
        fi
        
    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: github.event.client_payload.test == 'true'
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        
    - name: upload .config to WETRANSFER for test
      if: github.event.client_payload.test == 'true'
      run: |
        cd openwrt
        make defconfig
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress .config 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "::set-output name=url::$(cat wetransfer.log | grep https | cut -f3 -d" ")"

    - name: Download package
      id: package
      if: github.event.client_payload.test != 'true'
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      if: github.event.client_payload.test != 'true'
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check space usage
      if: github.event.client_payload.test != 'true' && !cancelled()
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: github.event.client_payload.test != 'true' && env.UPLOAD_BIN_DIR == 'true' && steps.compile.outputs.status == 'success'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: github.event.client_payload.test != 'true' && env.UPLOAD_FIRMWARE == 'true' && steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: github.event.client_payload.test != 'true' && steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Upload firmware to cowtransfer
      id: cowtransfer
      if: github.event.client_payload.test != 'true' && steps.organize.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"

    - name: Upload firmware to WeTransfer
      id: wetransfer
      if: github.event.client_payload.test != 'true' && steps.organize.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "::set-output name=url::$(cat wetransfer.log | grep https | cut -f3 -d" ")"

    - name: Generate release body
      id: tag
      if: github.event.client_payload.test != 'true' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "::set-output name=release_name::${{matrix.repo_type}} ${{matrix.target}} ${{matrix.branch}}"
        touch release.txt
        echo -e `curl "https://api.github.com/repos/x-wrt/build-release/releases/tags/v${{matrix.branch}}" | jq '.body' | sed 's/\"//g' | sed 's/\\r\\n/\\n/g'` >> release.txt
        echo "::set-output name=status::success"
        
    - name: Remove same tag Releases
      uses: dev-drprasad/delete-older-releases@v0.2.0
      if: github.event.client_payload.test != 'true' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 0
        delete_tags: true
        delete_tag_pattern: ${{ env.RELEASE_TAG }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: github.event.client_payload.test != 'true' && steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: ${{ steps.tag.outputs.release_name }}
        tag_name: ${{ env.RELEASE_TAG }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        repository: zhuxiaole/Build-OpenWrt
        maximum-workflow-runs-to-keep: 8

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.2.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 10
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
